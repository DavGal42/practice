#include <iostream>


class Node {
    public:
        int data;
        Node* next;

        Node(int val) : data(val), next(nullptr) {}
    };


class LinkedList {
    private:
        Node* head; 

    public:
        LinkedList() : head(nullptr) {}

        void append(int val) {
            Node* newNode = new Node(val); 

            if (!head) {
                head = newNode;  
            } else {
                Node* temp = head;

                while (temp->next) {
                    temp = temp->next;
                }

                temp->next = newNode;
            }
        }

        void print() const {
            Node* temp = head;

            while (temp) {
                std::cout << temp->data << " ";
                temp = temp->next; 
            }

            std::cout << std::endl;
        }

        void remove(int val) {

            if (!head) return;  

            if (head->data == val) {
                Node* temp = head;
                head = head->next; 
                delete temp; 
                return;
            }

            Node* temp = head;

            while (temp->next) {

                if (temp->next->data == val) {
                    Node* remove = temp->next;
                    temp->next = temp->next->next;  
                    delete remove; 
                    return;
                } else {
                    std::cout << "There is no such value.\n";
                    return;
                }

                temp = temp->next;
            }
        }

        ~LinkedList() {

            while (head) {
                Node* temp = head;
                head = head->next;
                delete temp;
            }
        }
};


int main() {
    LinkedList list;

    list.append(1);
    list.append(2);
    list.append(3);
    list.append(4);

    std::cout << "Print list's elements: ";
    list.print();

    std::cout << "Removing an element from the list." << std::endl;
    list.remove(2);
    list.print();

    return 0;
}
